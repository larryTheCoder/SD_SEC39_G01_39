syntax = "proto3";
option java_multiple_files = true;
package org.mudahmail.rpc;

import "google/protobuf/empty.proto";

// Proposal: A notification to the server requires a long grpc calls, a bi-di is suitable
// for a use-case where a stream of messages are needed to be sent over simultaneously.

enum NotificationType {
  DOOR_STATE_OPEN = 0;
  DOOR_STATE_CLOSED = 1;
  DOOR_LOCKED = 3;
  DOOR_UNLOCKED = 4;
  WEIGHT_STATE_UPDATE = 5;

  BIOMETRICS_DELETE = 6;
  BIOMETRICS_ADD = 7;

  RPC_LAZY_STARTUP = 8;
}

message NotificationRequest {
  NotificationType type = 1;
  int64 timestamp = 2;
  string dataString = 3;
  double dataDouble = 4;
  int64 dataInteger = 5;
  bytes rawData = 6;
}

message DoorRequestResponse {
  int64 timestamp = 1;
  bool success = 2;
}

message DoorLockStatusRequest {
  bool toggleLock = 1;
}

message BiometricsDeletionResponse {
  int64 biometricId = 1;
  bool success = 2;
}

message BiometricsInfoResponse {
  int64 biometricId = 1;
  bytes biometricData = 2;
  int64 timestamp = 3;
}

// Headers metadata:
// - Bearer: REQUIRED
// - Device: {uuid} [REQUIRED FOR SERVER]

service Mailbox {
  rpc startEventListener(stream NotificationRequest) returns (stream NotificationRequest);
  rpc testEventListener(NotificationRequest) returns (google.protobuf.Empty);
}

service Server {
  rpc setDoorLockStatus(DoorLockStatusRequest) returns (DoorRequestResponse);
  rpc getBiometricList(google.protobuf.Empty) returns (stream BiometricsInfoResponse);
  rpc deleteBiometricId(google.protobuf.Empty) returns (BiometricsDeletionResponse);
}
