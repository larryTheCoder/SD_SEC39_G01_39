<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.mudahmail</groupId>
        <artifactId>mudahmail</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>client</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <crowpi.hostname>crowpi</crowpi.hostname>
        <crowpi.ipnumber>192.168.1.74</crowpi.ipnumber>  <!-- change to concrete ip-number if hostname is not unique in wlan -->
        <crowpi.port>22</crowpi.port>
        <crowpi.username>pi</crowpi.username>
        <crowpi.password>pi4j2023</crowpi.password>
        <crowpi.deploydirectory>/home/pi/deploy</crowpi.deploydirectory>
        <crowpi.jvmOptions/>

        <javalin.version>5.6.1</javalin.version>
        <log4j.version>2.20.0</log4j.version>
        <pi4j.version>2.3.0</pi4j.version>
        <picocli.version>4.7.4</picocli.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.mudahmail</groupId>
            <artifactId>rpc</artifactId>
            <version>${revision}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Logging utility -->

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- include Pi4J Core -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-core</artifactId>
            <version>${pi4j.version}</version>
        </dependency>

        <!-- include Pi4J Plugins (Platforms and I/O Providers) -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-raspberrypi</artifactId>
            <version>${pi4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-pigpio</artifactId>
            <version>${pi4j.version}</version>
        </dependency>

        <!-- Plugin for I2C -->
        <dependency>
            <groupId>com.pi4j</groupId>
            <artifactId>pi4j-plugin-linuxfs</artifactId>
            <version>${pi4j.version}</version>
        </dependency>

        <!-- PicoCLI -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>

        <!-- Serial interface lib -->
        <dependency>
            <groupId>com.neuronrobotics</groupId>
            <artifactId>nrjavaserial</artifactId>
            <version>5.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.3.0.Final</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>Client</finalName>

        <plugins>
            <!--
            https://maven.apache.org/plugins/maven-compiler-plugin/
            The Compiler Plugin is used to compile the sources of your project.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>17</release>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <verbose>false</verbose>
                </configuration>
            </plugin>

            <!--
            https://maven.apache.org/plugins/maven-jar-plugin/
            This plugin provides the capability to build (executable) jars and is used here to set the mainClass
            which will start the application.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.mudahmail.client.Bootstrap</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!--
            https://maven.apache.org/plugins/maven-shade-plugin/
            This plugin provides the capability to package the artifact in an uber-jar, including its dependencies and
            to shade - i.e. rename - the packages of some of the dependencies. The transformer will combine the files
            in the META-INF.services directories of multiple Pi4J plugins with the same package name into one file.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <configuration>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>